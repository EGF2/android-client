apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'maven'

def cfg = rootProject.ext

group = cfg.group
version = cfg.versionName

ext {
    bintrayRepo = 'egf2-android-client'
    bintrayName = 'framework'

    publishedGroupId = cfg.group
    libraryName = 'EFG2 framework'
    artifact = 'framework'

    libraryDescription = 'Android client library for EGF2 framework'

    siteUrl = 'https://github.com/EGF2/android-client'
    gitUrl = 'https://github.com/EGF2/android-client.git'
    githubRepository = 'EGF2/android-client'

    libraryVersion = cfg.versionName

    developerId = 'alexxxdev'
    developerName = 'Alexey Derendyaev'
    developerEmail = 'derendyaev@eigengraph.com'

    licenseName = 'MIT License'
    licenseUrl = 'https://github.com/EGF2/android-client/blob/master/LICENSE'
    allLicenses = ["MIT"]
}

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.google.code.gson:gson:$gson"

    compile "com.squareup.retrofit2:retrofit:$retrofit"

    compile "io.reactivex:rxandroid:$rxandroid"
    compile "io.reactivex:rxjava:$rxjava"

    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit"
    compile "com.squareup.retrofit2:converter-gson:$retrofit"

    compile "com.squareup.okhttp3:okhttp:$okhttp"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp"
}

/*uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}*/

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    failOnError false
}


apply from: '../installFramework.gradle'
apply from: '../bintrayFramework.gradle'
